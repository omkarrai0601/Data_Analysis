<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SalesInsightProject' path='/t/omirai0601-d35947e5c6/workbooks' revision='1.0' site='omirai0601-d35947e5c6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0uupmco054j1cv1gsxcgd0lfhemq'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='date' table='[date]' type='table' />
          <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_133BB6C0A6AA459B870453A7A62F5531]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_E4DA9039645D4C85A1B207E20805E8E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_E4DA9039645D4C85A1B207E20805E8E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_E4DA9039645D4C85A1B207E20805E8E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_44CA679CBA784D16A40D101C9CF9F612]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_44CA679CBA784D16A40D101C9CF9F612]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_44CA679CBA784D16A40D101C9CF9F612]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_44CA679CBA784D16A40D101C9CF9F612]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_44CA679CBA784D16A40D101C9CF9F612]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_675807BF5F1A4FD6BD499AF55DAA690D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_675807BF5F1A4FD6BD499AF55DAA690D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_675807BF5F1A4FD6BD499AF55DAA690D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_DD64CC0E40FB4105AC03C3B42F655FD4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_DD64CC0E40FB4105AC03C3B42F655FD4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_E4DA9039645D4C85A1B207E20805E8E9]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_44CA679CBA784D16A40D101C9CF9F612]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_675807BF5F1A4FD6BD499AF55DAA690D]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_DD64CC0E40FB4105AC03C3B42F655FD4]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_133BB6C0A6AA459B870453A7A62F5531]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_636414927765143552' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_E4DA9039645D4C85A1B207E20805E8E9'>
            <properties context=''>
              <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_44CA679CBA784D16A40D101C9CF9F612'>
            <properties context=''>
              <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_675807BF5F1A4FD6BD499AF55DAA690D'>
            <properties context=''>
              <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_DD64CC0E40FB4105AC03C3B42F655FD4'>
            <properties context=''>
              <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_133BB6C0A6AA459B870453A7A62F5531'>
            <properties context=''>
              <relation connection='mysql.0uupmco054j1cv1gsxcgd0lfhemq' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_133BB6C0A6AA459B870453A7A62F5531' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_E4DA9039645D4C85A1B207E20805E8E9' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_133BB6C0A6AA459B870453A7A62F5531' />
            <second-end-point is-db-set-unique-key='true' object-id='date_44CA679CBA784D16A40D101C9CF9F612' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_133BB6C0A6AA459B870453A7A62F5531' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_675807BF5F1A4FD6BD499AF55DAA690D' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_133BB6C0A6AA459B870453A7A62F5531' />
            <second-end-point is-db-set-unique-key='true' object-id='products_DD64CC0E40FB4105AC03C3B42F655FD4' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_937D9AF981424EB4B073736F150F7DC3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_597D3413CA884DD5828E0171AAC976DB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_20210E4DAE6F4259954E167016C52007]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_D8D2ED9791FC43B793D6416B2CC198E9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_68E9243141264A26A66608F640C00CBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales Quantity by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_EFC9F30D151E4370AE957B03B02A3D6A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_740D356A4656458DAAC5E318694E1B59]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet=' Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_EA97ECB9BBC74E26A4BF833139F2C503]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_636414927765143552]' derivation='Sum' name='[sum:Calculation_636414927765143552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_636414927765143552])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod001&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod007&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod008&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod011&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod012&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod014&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod015&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod020&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod022&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod024&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod025&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod026&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod028&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod029&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod031&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod032&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod034&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod036&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod037&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod041&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod043&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod050&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod051&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod063&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod067&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod068&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod069&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod076&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod077&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod078&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod080&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod081&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod082&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod085&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod086&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod087&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod088&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod097&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod107&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod109&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod111&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod112&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod125&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod132&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod138&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod150&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod151&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod153&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod155&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod160&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod163&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod171&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod173&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod180&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod182&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod183&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod186&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod189&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod190&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod193&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod195&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod196&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod197&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod199&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod200&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod201&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod202&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod203&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod211&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod217&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod222&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod226&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod235&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod251&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod253&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod256&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod259&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod262&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod268&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod272&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod277&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod279&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prod040&quot;</bucket>
              <bucket>&quot;Prod159&quot;</bucket>
              <bucket>&quot;Prod065&quot;</bucket>
              <bucket>&quot;Prod018&quot;</bucket>
              <bucket>&quot;Prod053&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='bold' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]</rows>
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]</cols>
      </table>
      <simple-id uuid='{D6695290-5CD8-4E18-8D57-7C609621AD81}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_574771908083884032]' derivation='None' name='[none:Calculation_574771908083884032:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]' value='#9d7660' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:Calculation_574771908083884032:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{7319D325-A2F3-4E20-98FB-C2DDC5541703}' />
    </worksheet>
    <worksheet name='Quantity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#69aaa5' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#69aaa5' fontsize='18'><![CDATA[<[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9C84019F-6BD3-4CFA-9EDA-4199C1106724}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_636414927765143552]' derivation='Sum' name='[sum:Calculation_636414927765143552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#75a1c7' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#75a1c7' fontsize='18'><![CDATA[<[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{51A4601C-91B9-4F3B-BD78-61DA0F0EB2F1}' />
    </worksheet>
    <worksheet name='Revenue by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_636414927765143552]' derivation='Sum' name='[sum:Calculation_636414927765143552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='c#,##0,,.00M' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='11' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]</rows>
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]</cols>
      </table>
      <simple-id uuid='{687D415E-0BCA-4AE8-8F7E-2E1183795534}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_636414927765143552]' derivation='Sum' name='[sum:Calculation_636414927765143552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='36' />
            <format attr='cell-h' value='12' />
            <format attr='cell' value='12' />
            <format attr='cell-q' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]</rows>
        <cols>([federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok] / [federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{E5159929-B153-4763-9E02-E6C4BDCC5221}' />
    </worksheet>
    <worksheet name='Sales Quantity by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' value='c#,##0,.00K' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' value='11' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' value='bold' />
            <format attr='color' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]</rows>
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{94CB342E-4DF2-415D-89F5-081F88C49595}' />
    </worksheet>
    <worksheet name='Top 5 Customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_636414927765143552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74&#13;&#10;ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_636414927765143552]' derivation='Sum' name='[sum:Calculation_636414927765143552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_937D9AF981424EB4B073736F150F7DC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_636414927765143552])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Acclaimed Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;All-Out&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Atlas Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Control&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsara Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsbea Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalslance Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalslytical&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsocity&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsopedia Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsquipo Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Elite&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Epic Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Excel Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Expression&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Flawless Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Forward Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Info Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Insight&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Integration Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Leader&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Logic Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Modular&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Nixon&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Nomad Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Novus&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Path&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Power&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Premium Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Propel&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Relief&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Sage&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Sound&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Surface Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Surge Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Synthetic&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Unity Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Zone&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='11' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]' value='144' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]</rows>
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[sum:Calculation_636414927765143552:qk]</cols>
      </table>
      <simple-id uuid='{35B69297-9A46-46A2-B132-C8953A2E44DE}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1vjjnmx0ssuia71e8tnzl1g76zsm' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjjnmx0ssuia71e8tnzl1g76zsm'>
            <column caption='Blank' datatype='string' name='[Calculation_574771908083884032]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_574771908083884032]' derivation='None' name='[none:Calculation_574771908083884032:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E14FC9A55624BA0B27C5CE93509E18E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_574771908083884032]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-weight' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:Calculation_574771908083884032:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{A6E77F21-62F8-4E33-BE4F-2609999164F0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1550' minheight='900' minwidth='1550' sizing-mode='fixed' />
      <zones>
        <zone h='6667' id='3' name='Year' w='22200' x='40067' y='1444' />
        <zone h='5333' id='4' name='Month' w='48133' x='26533' y='7889' />
        <zone h='61889' id='5' name='Revenue by Markets' w='23677' x='1032' y='30889' />
        <zone h='11222' id='6' name='Revenue' w='17867' x='7333' y='18111' />
        <zone h='62111' id='7' name='Sales Quantity by Markets' w='24581' x='26000' y='30556' />
        <zone h='15556' id='8' name='Quantity' w='15484' x='29484' y='14333' />
        <zone h='34444' id='9' name='Revenue by Year' w='49355' x='50323' y='15000' />
        <zone h='39889' id='10' name='Top 5 Customer' w='22903' x='50387' y='52667' />
        <zone h='39444' id='11' name=' Top 5 Products' w='21161' x='74065' y='52667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='20' param='vert' type-v2='layout-flow' w='98968' x='516' y='889'>
                <zone fixed-size='60' h='6667' id='3' is-fixed='true' name='Year' w='22200' x='40067' y='1444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='5333' id='4' is-fixed='true' name='Month' w='48133' x='26533' y='7889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='140' h='15556' id='8' is-fixed='true' name='Quantity' w='15484' x='29484' y='14333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34444' id='9' is-fixed='true' name='Revenue by Year' w='49355' x='50323' y='15000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='101' h='11222' id='6' is-fixed='true' name='Revenue' w='17867' x='7333' y='18111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62111' id='7' is-fixed='true' name='Sales Quantity by Markets' w='24581' x='26000' y='30556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61889' id='5' is-fixed='true' name='Revenue by Markets' w='23677' x='1032' y='30889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39889' id='10' is-fixed='true' name='Top 5 Customer' w='22903' x='50387' y='52667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39444' id='11' is-fixed='true' name=' Top 5 Products' w='21161' x='74065' y='52667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{38C179DD-3351-48BE-BF19-133BE3B3DF38}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{55A5CB8A-958B-4D38-B110-CADFA3A9E075}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3CEFC899-1A31-4140-B7D9-1638A9B99F81}' />
    </window>
    <window class='worksheet' name='Revenue by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{176F6CD9-3F1C-4ECE-8707-4B948A66B929}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BB19735-6E9E-4380-ADFC-7F607109E4AC}' />
    </window>
    <window class='worksheet' name='Top 5 Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DA52040-BC5B-410D-8268-0B5ECC92EA47}' />
    </window>
    <window class='worksheet' name=' Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6459EBF1-EC06-442B-B2EC-8CE7FF239EB1}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA440042-DD77-4321-AAC8-19AE7D9BC03F}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:Calculation_574771908083884032:nk]</field>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A77A6222-086D-4F70-B640-0D25EBA00B17}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[none:Calculation_574771908083884032:nk]</field>
            <field>[federated.1vjjnmx0ssuia71e8tnzl1g76zsm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4C35354-8091-479E-82F5-812B01308F5C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Top 5 Products' />
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by Markets' />
        <viewpoint name='Top 5 Customer' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1B09B1D6-AEB7-47EE-9FD2-568CC391B34F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Top 5 Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      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
      61sOMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='86' name='Quantity' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Revenue' width='192'>
      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
      /wEu83KN03hGzAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by Markets' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customer' width='192'>
      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
      zf8PiGN1IsTHfy8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='Year' width='192'>
      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
      0Lgv/BcmPLW6TXwVugAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
